      
      
        <li>Az első állításban a két operandus kiértékelés során egyenlőnek bizonyul, így a kifejezés értéke True lesz. A második állításban mivel az 5 nem egyenlő a 6-tal így False értéket kapunk.</li>
        <p>Az == operátor az egyike annak a hat közönséges összehasonlító operátornak, amelyek bool értéket eredményeznek. Itt van mind a hat:</p>
        <h2>x == y               # True (igaz) értéket ad ha ... x egyenlő y-nal
          x != y               # ... x nem egyenlő y-nal
          x &gt; y                # ... x nagyobb, mint y
          x &lt; y                # ... x kisebb, mint y
          x &gt;= y               # ... x nagyobb vagy egyenlő, mint y
          x &lt;= y               # ... x kisebb vagy egyenlő, mint y</h2>
          
          <h1>5.2. Logikai operátorok</h1>
          <li>Van három logikai operátor, and (és), or (vagy) valamint a not (nem), amelyek lehetővé teszik számunkra, hogy bonyolultabb Boolean vagyis logikai kifejezéseket is létrehozzunk egyszerűbbekből. Ezen operátorok szemantikája (jelentése) hasonló az angol jelentéseikhez. Például az x > 0 and x &gt; 10 kifejezés True értéket kizárólag akkor eredményez, ha x egyszerre nagyobb, mint 0 és kisebb, mint 10.</li>
          <li>Az n % 2 == 0 or n % 3 == 0 kifejezés akkor ad True értéket, ha legalább az egyik feltétel igaz, azaz ha az n szám osztható 2-vel vagy 3-mal egy adott időpontban. (Mit gondolsz, mi történik, ha n egyszerre 2-vel és 3-mal is osztható? A kifejezés True vagy False értéket ad? Próbáld ki a Python parancsértelmeződdel!)</li>
          <li>Végül, a not operátor negálja (azaz tagadja) a Boolean értéket, így a not (x > y) kifejezés True értékű, ha az (x > y) kifejezés False (hamis), azaz ha x kisebb, vagy egyenlő y-nál.</li>
          <h1>Igazságtáblák</h1>
          <h2>a	b	a and b
            False	False	False
            False	True	False
            True	False	False
            True	True	True</h2>
            <p>Az igazságtáblában gyakran csak T és F betűket írunk a Boolean értékek rövidítésének megfelelően. Az alábbi igazságtábla írja le az or logikáját:</p>
            a	b	a or b
              F	F	F
              F	T	T
              T	F	T
              T	T	T</h2>
